type Query {
  node(id: ID!): Node
  cicd: cicd_Query
}

type cicd_Query {
  deployments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: cicd_DeploymentFilter
  ): cicd_DeploymentConnection
}

"""A connection to a list of `cicd_Deployment` values."""
type cicd_DeploymentConnection {
  """A list of `cicd_Deployment` objects."""
  nodes: [cicd_Deployment]!

  """
  A list of edges which contains the `cicd_Deployment` and cursor to aid in pagination.
  """
  edges: [cicd_DeploymentEdge!]!

  """Information to aid in pagination."""
  pageInfo: builtin_PageInfo!
}

"""A `cicd_Deployment` edge in the connection."""
type cicd_DeploymentEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `cicd_Deployment` at the end of the edge."""
  node: cicd_Deployment
}

"""
A filter to be used against `cicd_Deployment` object types. All fields are combined with a logical ‘and.’
"""
input cicd_DeploymentFilter {
  """Filter by the object’s `refreshedAtMillis` field."""
  refreshedAtMillis: builtin_BigIntFilter
}

scalar builtin_BigInt

"""
A filter to be used against builtin_BigInt fields. All fields are combined with a logical ‘and.’
"""
input builtin_BigIntFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: builtin_BigInt

  """Not equal to the specified value."""
  notEqualTo: builtin_BigInt

  """Included in the specified list."""
  in: [builtin_BigInt!]

  """Not included in the specified list."""
  notIn: [builtin_BigInt!]

  """Less than the specified value."""
  lessThan: builtin_BigInt

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: builtin_BigInt

  """Greater than the specified value."""
  greaterThan: builtin_BigInt

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: builtin_BigInt
}

type builtin_PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
}

scalar Cursor

interface Node {
  id: ID!
}

"""Generic node metadata"""
type NodeMetadata {
  """The origin of the entry which created the node"""
  origin: String

  """The latest timestamp of the entries affecting this node"""
  refreshedAt: String
}

type Person {
  name: String
  contact: Contact
}

type Contact {
  email: String
  phone: String
}

type deeply_Embedded {
  env: cicd_Environment
  envs: [cicd_Environment]
  name: String
  topics: [String!]
}

type cicd_Environment {
  category: cicd_EnvironmentCategory
  detail: String
}

enum cicd_EnvironmentCategory {
  Prod
  Dev
}

type fake_Model implements Node {
  deep: deeply_Embedded
  person: Person
}

type cicd_Deployment implements Node {
  """A globally unique identifier for the node"""
  id: ID!

  """Generic node metadata"""
  metadata: NodeMetadata!

  """Deployment uid is unique within the source system, e.g CodeDeploy"""
  uid: ID
  source: String

  env: cicd_Environment
  envs: [cicd_Environment]

  """
  Reads a single `compute_Application` that is related to this `cicd_Deployment`.
  """
  application: compute_Application

  """Reads a single `cicd_Build` that is related to this `cicd_Deployment`."""
  build: cicd_Build
}

type compute_Application implements Node {
  """A globally unique identifier for the node"""
  id: ID!

  """Generic node metadata"""
  metadata: NodeMetadata!
  name: String
  displayName: String
  platform: String
}

type cicd_Build implements Node {
  """A globally unique identifier for the node"""
  id: ID!

  """Generic node metadata"""
  metadata: NodeMetadata!

  """Build uid is unique within the context of the pipeline"""
  uid: ID
  name: String
  number: Int

  """Reads a single `cicd_Pipeline` that is related to this `cicd_Build`."""
  pipeline: cicd_Pipeline
}

type cicd_Pipeline implements Node {
  """A globally unique identifier for the node"""
  id: ID!

  """Generic node metadata"""
  metadata: NodeMetadata!

  """Pipeline uid is unique within the context of the organization"""
  uid: ID
  name: String

  """
  Reads a single `cicd_Organization` that is related to this `cicd_Pipeline`.
  """
  organization: cicd_Organization
}

type cicd_Organization implements Node {
  """A globally unique identifier for the node"""
  id: ID!

  """Generic node metadata"""
  metadata: NodeMetadata!

  """Organization uid is unique within the source system, e.g Jenkins"""
  uid: ID
  name: String
  source: String
}
